- name: Install Basic Packages
  hosts: localhost

# --- Install Basic Packages --- #
  tasks:
    - name: Update apt cache and install core tools
      apt:
        name:
          - zsh
          - vim
          - nala
          - git
          - ufw
          - firefox
          - default-jre
        state: present
        update_cache: yes
      become: true

    # --- zsh --- #
    - name: Change shell to zsh using chsh
      ansible.builtin.command:
        cmd: chsh -s /bin/zsh
      become: true
      register: chsh_result
      changed_when: chsh_result.rc == 0
      failed_when: chsh_result.rc != 0

    - name: Install Oh My Zsh (unattended)
      ansible.builtin.shell: |
        RUNZSH=no CHSH=no KEEP_ZSHRC=yes sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        executable: /bin/zsh
        creates: "{{ ansible_user_dir }}/.oh-my-zsh"
      become: false
      environment:
        USER: "{{ ansible_user }}"
        HOME: "{{ ansible_user_dir }}"

    - name: Clone Powerlevel10k theme
      ansible.builtin.git:
        repo: 'https://github.com/romkatv/powerlevel10k.git'
        dest: "{{ ansible_user_dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
        version: master
        update: yes
      become: false

    - name: Set Powerlevel10k as Oh My Zsh theme
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.zshrc"
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
        state: present
      become: false
    # --- End zsh --- #

    # --- Ghostty --- #
    - name: install ghostty with snap on ubuntu with --classic
      ansible.builtin.command:
        cmd: snap install ghostty --classic
      when: ansible_distribution == 'Ubuntu'
      become: true
      changed_when: false # snap install output is verbose, don't mark as changed unless it errors
      failed_when: false # Allow to fail gracefully if snap isn't installed or has issues

    # --- Ghostty --- #
    - name: generate ghostty config file with ghostty config
      ansible.builtin.command:
        cmd: ghostty config
      become: false #important to not generate config as root
      register: ghostty_config
      changed_when: false # ghostty config output is verbose, don't mark as changed unless it errors
      failed_when: false # Allow to fail gracefully if ghostty isn't installed or has issues

    - name: edit ghostty theme in config to theme=tokyonight-storm
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.config/ghostty/config"
        line: 'theme=tokyonight-storm'
        insertafter: EOF
        state: present

    # --- End Ghostty --- #

    # --- Install Desktop Environment components --- #
    - name: Install Desktop Environment components
      apt:
        name:
          - xserver-xorg
          - i3
          - lightdm
        state: present
      become: true

    - name: Install Additional Utilities
      apt:
        name:
          - kitty
          - suckless-tools
        state: present
      become: true

    - name: Refresh snap packages if running Ubuntu
      ansible.builtin.command:
        cmd: snap refresh
      when: ansible_distribution == 'Ubuntu'
      become: true
      changed_when: false # snap refresh output is verbose, don't mark as changed unless it errors
      failed_when: false # Allow to fail gracefully if snap isn't installed or has issues

    # --- End Install Basic Packages --- #

    # --- Shell Aliases --- #
    - name: alias sudo to 'sudo ' in bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        line: 'alias sudo="sudo "'
        insertafter: EOF
        state: present

    - name: alias apt to 'nala' in bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        line: 'alias apt="nala"'
        insertafter: EOF
        state: present

    # --- End Shell Aliases --- #

    # --- i3 Config --- #
    - name: Clone personal i3 config repo to temp location
      ansible.builtin.git:
        repo: https://github.com/lambo12000/i3_vms.git
        dest: /tmp/i3_vms
        clone: yes
        update: yes # Optional: pull latest changes if repo already cloned

    - name: Move i3 config folder to user config directory
      ansible.builtin.copy:
        src: /tmp/i3_vms/i3
        dest: "{{ ansible_user_dir }}/.config/"
        remote_src: yes
        directory_mode: preserve # Keeps original permissions

    - name: Remove temporary i3 config repo clone
      ansible.builtin.file:
        path: /tmp/i3_vms
        state: absent

    # --- End i3 Config --- #

    # --- ufw Config --- #
    - name: Set ufw default deny incoming
      ansible.builtin.ufw:
        direction: incoming
        policy: deny
      become: true

    - name: Set ufw default allow outgoing
      ansible.builtin.ufw:
        direction: outgoing
        policy: allow
      become: true

    - name: Enable ufw
      ansible.builtin.ufw:
        state: enabled
      become: true

    # --- End ufw Config --- #
